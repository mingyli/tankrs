// automatically generated by the FlatBuffers compiler, do not modify

import * as NS6514486890405553873 from "./world_generated";
export namespace Tankrs { 
export import WorldState = NS6514486890405553873.Tankrs.WorldState; }
export namespace Tankrs { 
export import GameParams = NS6514486890405553873.Tankrs.GameParams; }
/**
 * @enum {number}
 */
export namespace Tankrs{
export enum Message{
  NONE= 0,
  WorldState= 1,
  GameParams= 2
}};

/**
 * @constructor
 */
export namespace Tankrs{
export class MessageRoot {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns MessageRoot
 */
__init(i:number, bb:flatbuffers.ByteBuffer):MessageRoot {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param MessageRoot= obj
 * @returns MessageRoot
 */
static getRootAsMessageRoot(bb:flatbuffers.ByteBuffer, obj?:MessageRoot):MessageRoot {
  return (obj || new MessageRoot()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param MessageRoot= obj
 * @returns MessageRoot
 */
static getSizePrefixedRootAsMessageRoot(bb:flatbuffers.ByteBuffer, obj?:MessageRoot):MessageRoot {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MessageRoot()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns Tankrs.Message
 */
messageType():Tankrs.Message {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : Tankrs.Message.NONE;
};

/**
 * @param flatbuffers.Table obj
 * @returns ?flatbuffers.Table
 */
message<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startMessageRoot(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param Tankrs.Message messageType
 */
static addMessageType(builder:flatbuffers.Builder, messageType:Tankrs.Message) {
  builder.addFieldInt8(0, messageType, Tankrs.Message.NONE);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset messageOffset
 */
static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, messageOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endMessageRoot(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishMessageRootBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishSizePrefixedMessageRootBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
};

static createMessageRoot(builder:flatbuffers.Builder, messageType:Tankrs.Message, messageOffset:flatbuffers.Offset):flatbuffers.Offset {
  MessageRoot.startMessageRoot(builder);
  MessageRoot.addMessageType(builder, messageType);
  MessageRoot.addMessage(builder, messageOffset);
  return MessageRoot.endMessageRoot(builder);
}
}
}
